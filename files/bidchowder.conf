# bidchowder.conf
upstream prod {
    server 127.0.0.1:8000;
}
upstream webhook {
    server 127.0.0.1:9000;
}

# configuration of the production server
server {
    listen  *:80;
    listen  [::]:80;

    server_name www.bidchowder.com;

    # SSL Configurations
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/www.bidchowder.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.bidchowder.com/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    ssl_dhparam /etc/nginx/certs/dhparams.pem;
    # Redirect to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    # max upload size
    client_max_body_size 75M;

    # Proxy to prod
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass http://prod;
    }

    # Proxy to webhook handler
    location /hooks {
        proxy_set_header Host $host;
        proxy_pass http://webhook;
    }

    # For renewing certs
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/letsencrypt;
    }

    # Hide /acme-challenge subdirectory and return 404 on all requests.
    location = /.well-known/acme-challenge/ {
        return 404;
    }
}

# Redirect to www.bidchowder.com so we can share the cert.
server {
    listen *:80;
    server_name .bidchowder.com;
    return 301 https://www.bidchowder.com$request_uri;
}
